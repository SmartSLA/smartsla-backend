image: node:10

stages:
  - lint
  - test
  - swagger
  - release
  - publish
  - deploy_dev

### BEGIN OF TEMPLATES

.build-docker-tpl: &build-docker-tpl
  image: docker-registry.linagora.com:5000/linshare-snapshots/linshare-dind:latest
  tags:
    - docker
  services:
      - name: docker-registry.linagora.com:5000/linshare-snapshots/linshare-dind:latest
        alias: docker-dind

.test-template: &test-template
  image: node:10
  tags:
    - docker
  before_script:
    - npm install -g grunt-cli
    - npm install
    - 'echo "INFO: NB node packages : $(ls node_modules | wc -l)"'
  except:
    variables:
      - $SKIP_TESTS
    refs:
      - tags@linagora/lgs/smartsla/smartsla-backend

### END OF TEMPLATES

check_author:
  image: docker-registry.linagora.com:5000/lgs-releases/gitlab-integrity-checks:latest
  stage: lint
  variables:
    GIT_DEPTH: "1"
  tags:
    - ultralight
  script:
    - check_author.py check "$GITLAB_USER_EMAIL" "$GITLAB_USER_NAME" --no-accents
  except:
    refs:
      - master@linagora/lgs/smartsla/smartsla-backend
      - tags@linagora/lgs/smartsla/smartsla-backend
      - /^release-.*/@linagora/lgs/smartsla/smartsla-backend


lint:
  <<: *test-template
  stage: lint
  script:
    - grunt -v linters

test:
  <<: *test-template
  stage: test
  services:
    - mongo:3.4
    - elasticsearch:2.4
    - redis:3
    - rabbitmq:3.6
  script:
    - npm update
    - grunt --chunk=1 --ci

swagger:
  <<: *test-template
  stage: swagger
  script:
    - grunt swagger-generate
  artifacts:
    paths:
      - ./doc/REST_API/swagger/smartsla-swagger.json

deploy-swagger:
  stage: deploy_dev
  tags:
    - deployment
    - api.open-paas.org
    - shell
  environment:
    name: api
    url: https://api.open-paas.org
  only:
    - master@https://linagora/lgs/smartsla/smartsla-backend
  script:
    - perl -i -pe's/"host":"localhost:8080"/"schemes":["https"],"host":"demo.open-paas.org"/' ./doc/REST_API/swagger/smartsla-swagger.json
    - cp ./doc/REST_API/swagger/smartsla-swagger.json /var/www/html

# build and push a new snapshot of your docker image.
snapshot:
  <<: *build-docker-tpl
  stage: release
  variables:
      DOCKER_HOST: "tcp://docker-dind"
      DOCKER_IMAGE_PRIVATE: "docker-registry.linagora.com:5000/smartsla-snapshots/smartsla-backend"
  script:
    - guess-version.sh guess
    - source version.env
    - docker-tag-computing.sh ${VERSION} docker-tag-and-push.env
    - docker login -u ${REGISTRY_USER} -p ${REGISTRY_TOKEN} docker-registry.linagora.com:5000
    - docker build . -t build:latest
    - docker-tag-and-push.sh build:latest ${DOCKER_IMAGE_PRIVATE}
    - docker logout docker-registry.linagora.com:5000
  only:
    - master@linagora/lgs/smartsla/smartsla-backend
    - /^release-.*/@linagora/lgs/smartsla/smartsla-backend
  except:
    variables:
      - $SKIP_BUILD_DOCKER

docker-release:
  <<: *build-docker-tpl
  stage: release
  variables:
      DOCKER_HOST: "tcp://docker-dind"
      DOCKER_IMAGE_PRIVATE: "docker-registry.linagora.com:5000/smartsla-releases/smartsla-backend"
  script:
    - docker-tag-computing.sh ${CI_COMMIT_TAG} docker-tag-and-push.env
    - docker login -u ${REGISTRY_USER_RELEASE} -p ${REGISTRY_TOKEN_RELEASE} docker-registry.linagora.com:5000
    - docker build . -t build:latest
    - docker-tag-and-push.sh build:latest ${DOCKER_IMAGE_PRIVATE}
    - docker logout docker-registry.linagora.com:5000
  only:
    - tags@linagora/lgs/smartsla/smartsla-backend
  except:
    variables:
      - $SKIP_BUILD_DOCKER

# push the latest docker tag from the current docker tag, cf last job.
mark-as-latest:
  <<: *build-docker-tpl
  stage: publish
  variables:
      GIT_STRATEGY: none
      DOCKER_HOST: "tcp://docker-dind"
      DOCKER_IMAGE_PRIVATE: "docker-registry.linagora.com:5000/smartsla-releases/smartsla-backend"
  script:
    - docker login -u ${REGISTRY_USER_RELEASE} -p ${REGISTRY_TOKEN_RELEASE} docker-registry.linagora.com:5000
    - docker-tag-computing.sh ${CI_COMMIT_TAG} docker-tags.env
    - source docker-tags.env
    - docker pull ${DOCKER_IMAGE_PRIVATE}:${DOCKER_TAG}
    - export DOCKER_TAGS=latest
    - docker-tag-and-push.sh ${DOCKER_IMAGE_PRIVATE}:${DOCKER_TAG} ${DOCKER_IMAGE_PRIVATE}
    - docker logout docker-registry.linagora.com:5000
  when: manual
  only:
    - tags@linagora/lgs/smartsla/smartsla-backend

deploy_dev:
  stage: deploy_dev
  except:
    - triggers
  tags:
    - dev.open-paas.org
    - deployment
  environment:
    name: dev
    url: https://dev.open-paas.org
  only:
    - master@linagora/lgs/smartsla/smartsla-backend
  script:
    - cd /srv/${CI_PROJECT_NAME}
    - git fetch --all
    - git checkout ${CI_COMMIT_SHA}
    - npm install --ignore-scripts --production
    - npm update --production
    - npm prune
    - git checkout -- .
    - sudo /etc/init.d/rse.dev restart
